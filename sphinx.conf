#!/bin/bash

printf "
source PostsPgsql
{
  type            = pgsql
  sql_host        = ${POSTGRES_PORT_5432_TCP_ADDR:-localhost}
  sql_user        = postgres
  sql_pass        = ${POSTGRES_PASSWORD:-postgres}
  sql_db          = postgres
  sql_port        = ${POSTGRES_PORT_5432_TCP_PORT:-5432}

  sql_query       = SELECT _sphinx_id AS id, id AS uuid, text, type AS post_type, more, 'Post' AS type, date_part('epoch', updated_at)::int AS updated_at FROM posts ORDER BY updated_at DESC;

  sql_attr_string = post_type
  sql_attr_string = uuid
  sql_attr_string = type
  sql_attr_json   = more
  sql_attr_timestamp = updated_at
}

source UsersPgsql
{
  type              = pgsql
  sql_host          = ${POSTGRES_PORT_5432_TCP_ADDR:-localhost}
  sql_user          = postgres
  sql_pass          = ${POSTGRES_PASSWORD:-postgres}
  sql_db            = postgres
  sql_port          = ${POSTGRES_PORT_5432_TCP_PORT:-5432}
  
  sql_query         = SELECT _sphinx_id AS id, id AS uuid, username, email, more, 'User' AS type, date_part('epoch', updated_at)::int AS updated_at FROM users ORDER BY updated_at DESC;

  sql_field_string  = username
  sql_field_string  = email
  sql_attr_json     = more
  sql_attr_string   = uuid
  sql_attr_string   = type
  sql_attr_timestamp = updated_at
}

source CommentsPgsql
{
  type              = pgsql
  sql_host          = ${POSTGRES_PORT_5432_TCP_ADDR:-localhost}
  sql_user          = postgres
  sql_pass          = ${POSTGRES_PASSWORD:-postgres}
  sql_db            = postgres
  sql_port          = ${POSTGRES_PORT_5432_TCP_PORT:-5432}

  sql_query         = SELECT _sphinx_id AS id, id AS uuid, text, post_id, user_id, 'Comment' AS type, date_part('epoch', updated_at)::int AS updated_at FROM comments ORDER BY updated_at DESC;

  sql_attr_string   = post_id
  sql_attr_string   = user_id
  sql_attr_string   = uuid
  sql_attr_string   = type
  sql_attr_timestamp = updated_at
}

source SchoolsPgsql
{
  type              = pgsql
  sql_host          = ${POSTGRES_PORT_5432_TCP_ADDR:-localhost}
  sql_user          = postgres
  sql_pass          = ${POSTGRES_PASSWORD:-postgres}
  sql_db            = postgres
  sql_port          = ${POSTGRES_PORT_5432_TCP_PORT:-5432}

  sql_query         = SELECT _sphinx_id AS id, id AS uuid, name, description, url_name, 'School' AS type, date_part('epoch', updated_at)::int AS updated_at FROM schools ORDER BY updated_at DESC;

  sql_field_string  = name
  sql_field_string  = url_name
  sql_field_string  = description
  sql_attr_string   = uuid
  sql_attr_string   = type
  sql_attr_timestamp = updated_at
}

source HashtagsPgsql
{
  type              = pgsql
  sql_host          = ${POSTGRES_PORT_5432_TCP_ADDR:-localhost}
  sql_user          = postgres
  sql_pass          = ${POSTGRES_PASSWORD:-postgres}
  sql_db            = postgres
  sql_port          = ${POSTGRES_PORT_5432_TCP_PORT:-5432}

  sql_query         = SELECT _sphinx_id AS id, id AS uuid, name, 'Hashtag' AS type, date_part('epoch', updated_at)::int AS updated_at FROM hashtags ORDER BY updated_at DESC;

  sql_field_string  = name
  sql_attr_string   = uuid
  sql_attr_string   = type
  sql_attr_timestamp = updated_at
}

source GeotagsPgsql
{
  type              = pgsql
  sql_host          = ${POSTGRES_PORT_5432_TCP_ADDR:-localhost}
  sql_user          = postgres
  sql_pass          = ${POSTGRES_PASSWORD:-postgres}
  sql_db            = postgres
  sql_port          = ${POSTGRES_PORT_5432_TCP_PORT:-5432}

  sql_query         = SELECT _sphinx_id AS id, id AS uuid, name, url_name, 'Geotag' AS type, date_part('epoch', updated_at)::int AS updated_at FROM geotags ORDER BY updated_at DESC;

  sql_field_string  = name
  sql_field_string  = url_name
  sql_attr_string   = uuid
  sql_attr_string   = type
  sql_attr_timestamp = updated_at
}

index Posts
{
    source        = PostsPgsql
    path          = /var/idx/sphinx/Posts
    html_strip    = 1
    min_infix_len = 3
}

index Users
{
    source        = UsersPgsql
    path          = /var/idx/sphinx/Users
    min_infix_len = 3
}

index Comments
{
    source        = CommentsPgsql
    path          = /var/idx/sphinx/Comments
    min_infix_len = 3
}

index Schools
{
    source        = SchoolsPgsql
    path          = /var/idx/sphinx/Schools
    min_infix_len = 3
}

index Hashtags
{
    source        = HashtagsPgsql
    path          = /var/idx/sphinx/Hashtags
    min_infix_len = 3
}

index Geotags
{
    source        = GeotagsPgsql
    path          = /var/idx/sphinx/Geotags
    min_infix_len = 3
}

index PostsRT
{
  type            = rt
  path            = /var/idx/sphinx/PostsRT

  rt_field        = text
  rt_attr_string  = post_type
  rt_attr_string  = type
  rt_attr_json    = more
  rt_attr_timestamp = updated_at

  min_word_len    = 3
  min_infix_len   = 3
  html_strip      = 1
  preopen         = 1
}

index HashtagsRT
{
  type            = rt
  path            = /var/idx/sphinx/HashtagsRT

  rt_field        = name
  rt_attr_string  = type
  rt_attr_timestamp = updated_at

  min_word_len    = 3
  min_infix_len   = 3
  preopen         = 1
}

index CommentsRT
{
  type            = rt
  path            = /var/idx/sphinx/CommentsRT

  rt_field        = text
  rt_attr_string  = type
  rt_attr_timestamp = updated_at  

  min_word_len    = 3
  min_infix_len   = 3
  preopen         = 1
}

index UsersRT
{
  type            = rt
  path            = /var/idx/sphinx/UsersRT

  rt_field        = username
  rt_field        = email
  rt_attr_string  = type
  rt_attr_json    = more
  rt_attr_timestamp = updated_at

  min_word_len    = 3
  min_infix_len   = 3
  html_strip      = 1
  preopen         = 1
}

index SchoolsRT
{
  type            = rt
  path            = /var/idx/sphinx/SchoolsRT

  rt_field        = name
  rt_field        = url_name
  rt_field        = description
  rt_attr_string  = type
  rt_attr_timestamp = updated_at

  min_word_len    = 3
  min_infix_len   = 3
  preopen         = 1
}

index GeotagsRT
{
  type            = rt
  path            = /var/idx/sphinx/GeotagsRT

  rt_field        = name
  rt_field        = url_name
  rt_attr_string  = type
  rt_attr_timestamp = updated_at

  min_word_len    = 3
  min_infix_len   = 3
  preopen         = 1
}

indexer
{
  mem_limit = 512M
}

searchd
{
  listen          = 9312
  listen          = 9306:mysql41
  log             = /var/log/sphinx/searchd.log
  query_log       = /var/log/sphinx/query.log
  read_timeout    = 5
  max_children    = 30
  pid_file        = /var/run/sphinx/searchd.pid
  seamless_rotate = 1
  preopen_indexes = 1
  unlink_old      = 1
  workers         = threads # for RT to work
  binlog_path     = /var/lib/sphinx
}
"